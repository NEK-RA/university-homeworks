##########################################################################
# самый популярный способ
# import math


# def main(x, z, y):
#     n = len(x)
#     s = 0
#     for i in range(1, n+1):
#         s += 14*math.log10(x[(i-1)//2]**2 + y[(i-1)//2]**3 + 33*z[n+1-i-1])**3
#     return s
##########################################################################
##########################################################################
# второе по популярности - использование sum([...])
# from math import log10 as lg


# def getX(x, i):
#     return x[(i-1)//2]**2


# def getY(y, i):
#     return y[(i-1)//2]**3


# def getZ(z, i):
#     return 33*z[len(z)-i]


# def getPart(x, y, z, i):
#     return 14*lg(getX(x, i) + getY(y, i) + getZ(z, i))**3


# def main(x, z, y):
#     s = sum([getPart(x, y, z, i) for i in range(1, len(x)+1)])
#     return s
##########################################################################
##########################################################################
def main(x, z, y):
    return None
# test
print(main([-0.5, 0.05, -0.77, -0.63, 0.72],
[0.62, 0.06, 0.6, 0.45, 0.73],
[-0.13, -0.71, -0.14, -0.96, 0.79]), "≈ 1.23e+02")

print(main([-0.28, 0.2, 0.93, -0.29, -0.39],
[0.04, 0.05, 1.0, 0.23, 0.59],
[0.31, 0.36, -0.5, 0.22, -0.8]), "≈ 8.97e+01")

print(main([0.67, -0.87, -0.68, 0.6, 0.47],
[0.79, 0.23, 0.61, 0.14, 0.88],
[0.68, 0.88, 0.1, -0.74, 0.91]), "≈ 1.36e+02")

print(main([0.34, 0.04, 0.23, 0.58, -0.52],
[0.19, 0.45, 0.98, 0.3, 0.76],
[-0.36, 0.5, -0.1, -0.42, -0.58]), "≈ 1.31e+02")

print(main([0.82, -0.24, -0.35, 0.68, 0.42],
[0.92, 0.56, 0.6, 0.9, 0.21],
[0.91, 0.81, 0.81, -0.74, 0.16]), "≈ 1.65e+02")