##########################################################################
# 5 по популярности решение
# def main(n):
#     return -0.48 if n == 0 else (main(n-1) - (main(n-1)**2)/38)/55
##########################################################################
##########################################################################
# самое популярное
# def main(n):
#     if n:
#         return (main(n-1) - (main(n-1)**2)/38)/55
#     else:
#         return -0.48
##########################################################################
##########################################################################
# второе по популярности
# def submain(n):
#     return (main(n-1)**2)/38


# def main(n):
#     if not n:
#         return -0.48
#     return (main(n-1) - submain(n))/55
##########################################################################
##########################################################################
# третье по популярности
def main(n):
    values = [-0.48]
    for i in range(1, n+1):
        values.append((values[i-1] - (values[i-1]**2)/38)/55)
    return values[n]
##########################################################################
##########################################################################
# четвертое по популярности ???
# test
print(main(8), "expected ≈ -5.81e-15")
print(main(4), "expected ≈ -5.31e-08")
print(main(1), "expected ≈ -8.84e-03")
print(main(2), "expected ≈ -1.61e-04")
print(main(5), "expected ≈ -9.66e-10")